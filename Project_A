	package ECTE331_Project_A_2;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.plaf.synth.SynthScrollPaneUI;

public class Main_2 {
	public static int [][] grayImage;
	public static int source_image_width;
	public static int source_image_height;
	public static int template_image_width;
	public static int template_image_height;
	public static int height;
	public static int width;
	private static BufferedImage image_1;
	private static BufferedImage image_2;
	private static BufferedImage image;


	public static void main(String[] args) throws IOException 
	{
		// path of the image
		String sourceimage = "TenCardG.jpg";
		String templateimage = "Template.jpg";

		File inp_1=new File(sourceimage);
		File inp_2=new File(templateimage);
		image_1 = ImageIO.read(inp_1);
		image_2 = ImageIO.read(inp_2);
		source_image_width = image_1.getWidth();
		source_image_height = image_1.getHeight();
		template_image_width = image_2.getWidth();
		template_image_height = image_2.getHeight();
		
		int[][] source_pixel =  readColourImage(sourceimage);
		int[][] template_pixel = readColourImage(templateimage);
		int[][] slice_of_source_image = new int [template_pixel.length][template_pixel[0].length];

		int temp_size = template_image_height * template_image_width;
		double minimum = 10e5;
		double absDiffMat = 0;
		
		//System.out.println(source_pixel[1][2]);
		for(int i=0; i<(source_image_height-template_image_height);i++) // 926
			for(int j=0;j<source_image_width-template_image_width;j++) // 649
			{
				for(int k=0; k<(template_image_height); k++)
					for(int l=0; l<(template_image_width); l++)
					{
						slice_of_source_image[k][l] = source_pixel[i+k][j+l];	
					}
				 for (int i1 = 0; i1 < template_image_height; i1++) {
			            for (int j1 = 0; j1 < template_image_width; j1++) {
			                // Calculate the absolute difference for corresponding elements
			                double absDiff = Math.abs(slice_of_source_image[i1][j1] - template_pixel[i1][j1]);
			                // Assign absDiff to absDiffMat
			                absDiffMat+= absDiff;
			                
			                
			            }
			        }
				 
				
			}
			
	}


	public static int[][] readColourImage(String fileName) throws IOException {

		File inp=new File(fileName);
        image = ImageIO.read(inp);
        width = image.getWidth();
        height = image.getHeight();   
		// RGB pixel values
		byte[] pixels;  
		pixels = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();
		System.out.println("Dimension of the image: WxH= " + width + " x "+height+" "+ "| num of pixels: "+ pixels.length);

		//rgb2gray in a 2D array grayImage                 
		int pr;// red
		int pg;//  green
		int pb;// blue     

		grayImage = new int [height][width];
		int coord;
		for (int i=0; i<height;i++)
			for(int j=0;j<width;j++)
			{        		     
				coord= 3*(i*width+j);
				pr= ((short) pixels[coord] & 0xff); // red
				pg= (((short) pixels[coord+1] & 0xff));//  green
				pb= (((short) pixels[coord+2] & 0xff));// blue                

				grayImage[i][j]=(short)Math.round(0.299 *pr + 0.587 * pg  + 0.114 * pb);         
			} 
		return grayImage;

	}

}



/*
for(int i=0; i<(source_image_height-template_image_height);i++)
	for(int j=0;j<source_image_width-template_image_width;j++)
		for(int k=i; k<(template_image_height+i); k++)
			for(int l=j; l<(template_image_width+j); l++)
			{
				short[][] slice_of_sourceimage = null;
				slice_of_sourceimage[k][l] = (short) source_pixel[k][l];
				short absdiff
				
				
			}

*/

